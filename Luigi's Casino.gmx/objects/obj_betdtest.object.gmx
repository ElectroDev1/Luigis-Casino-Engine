<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>v_Offset=shader_get_uniform(shd_bed,"v_Offset");
Text=shader_get_uniform(shd_bed,"Texel");
uTime=shader_get_uniform(shd_bed,"Time");
Offset=0;
surf=-1;

margin=8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(!surface_exists(surf)){
   surf=surface_create(sprite_get_width(sprite_index)+margin
   ,sprite_get_height(sprite_index)+margin);
}else{


surface_set_target(surf);

draw_clear(c_green);
draw_sprite(sprite_index,0,sprite_xoffset+margin/2,sprite_yoffset+margin/2);

surface_reset_target();

shader_set(shd_bed);

var T=surface_get_texture(surf);

shader_set_uniform_f(uTime, 0);
shader_set_uniform_f(Text,texture_get_texel_width(T),texture_get_texel_height(T));
shader_set_uniform_f(v_Offset,Offset);

draw_surface_ext(surf,x-sprite_xoffset-margin/2,y-sprite_yoffset-margin/2,1,1,0,c_white,1);

shader_reset();





}

draw_line(bbox_right+6,bbox_top+sprite_get_height(sprite_index)*Offset,bbox_right+12,bbox_top+sprite_get_height(sprite_index)*Offset);

if(keyboard_check(vk_right)){  if(Offset&lt;1){Offset+=0.025;} }
if(keyboard_check(vk_left)){  if(Offset&gt;0){Offset-=0.025;} }

draw_text(x,y-40,-1+(1.5*Offset)*2 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
